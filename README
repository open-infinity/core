Open Infinity Core - a solution accelerator framework.

v.3.0.0.RELEASE - New major release with the following content

Upgrades to Maven dependencies
- Spring Framework upgrade to 4.1.6.RELEASE
- Spring Security version upgrade to 4.0.1.RELEASE
- Spring Batch Core version upgrade to 3.0.3.RELEASE
- slf4j version upgrade to 1.7.12
- Jackson version upgrade to 1.9.13
- Hibernate validator version upgrade to 4.3.2.Final
- Validation Util version upgrade to 1.1.0.Final
- Joda time version upgrade to 2.5
- Lombok version upgrade to 1.14.8
- Jolokia version upgrade to 1.2.2
- Commons lang version upgrade to 3.3.2
- HDIV version upgrade to 2.1.10
- Keyzcar version upgrade to 0.71g
- Xstream version upgrade to 1.4.7
- Commons codec version upgrade to 1.9
- Commons JXPATH version upgrade to 1.3
- Commons lang version upgrade to 2.6
- RXJava version upgrade to 0.20.4
- Commons IO version upgrade to 2.4
	
Packaging instructions

Maven installation:
Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.7 is needed):
http://maven.apache.org/download.html

Installing gryptography extensions:
mkdir <your location>
cd <your location>
git clone https://code.google.com/p/keyczar/
cd <your location>/keyczar/java/code/
git checkout Java_release_0.71g
mvn clean install
cd target

Signing public and private keys with Keyczar:

Asymmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/asymmetric --name="Open Infinity" --purpose=crypt --asymmetric=rsa
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/asymmetric --status=primary
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar pubkey --location=<your location>/security/asymmetric --destination=<your location>/security/pubkey

Symmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/symmetric --name="Open Infinity" --purpose=crypt
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/symmetric --name="Open Infinity" --status=primary

Install Lombok:
mkdir <lombok-directory>
cd <lombok-directory>
git clone https://github.com/awhitford/lombok.maven
cd lombok.maven
Use maven for compiling, testing, packaging lombok -plugin to local Maven repository with command:
mvn clean install

Install Open Infinity Core:
mkdir <open-infinity-core>
git clone https://github.com/open-infinity/core
cd core
vi src/test/resources/properties/crypto.properties (define paths to your local file system for asymmetric and symmetric keys)
Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install


v.2.0.0.RELEASE - New major release with the following content

New features for release
* ParallelServiceActivator bean for accessing services in parallel.
* AsyncResultCallback interface for accessing asynchonorous results.
* GenericCrudService*-interfaces for accessing services by parallel processing.
* Loadable interface for accessing asynchronous responses.
* CrudOperations provides standardized CRUD-operations for REST-interfaces.
* CrudService provides standardized CRUD-operations to service-interfaces.
* CollectionElementUtil and supporting interfaces for traverse objects.
* TraverseObjectCollectionElementCallback interface for traverse objects using Collection-interface.
* TraverseObjectMapElementCallback interface for traverse objects using Map-interface.
* ValidationUtil for Java bean validations.
* AbstractCoreException support for adding exception detail objects.

Upgrades to Maven dependencies
- Spring Framework upgrade to 3.2.11.RELEASE
- Spring Security version upgrade to 3.2.5.RELEASE
- Spring Batch Core version upgrade to 2.2.7.RELEASE
- slf4j version upgrade to 1.7.7
- Jackson version upgrade to 1.9.13
- Hibernate validator version upgrade to 4.3.2.Final
- Validation Util version upgrade to 1.1.0.Final
- Joda time version upgrade to 2.5
- Lombok version upgrade to 1.14.8
- Jolokia version upgrade to 1.2.2
- Commons lang version upgrade to 3.3.2
- HDIV version upgrade to 2.1.8
- Keyzcar version upgrade to 0.71g
- Xstream version upgrade to 1.4.7
- Commons codec version upgrade to 1.9
- Commons JXPATH version upgrade to 1.3
- Commons IO version upgrade to 2.4
- Commons lang version upgrade to 2.6
- RXJava version upgrade to 0.20.4
		
Packaging instructions

Maven installation:
Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.7 is needed):
http://maven.apache.org/download.html

Installing gryptography extensions:
mkdir <your location>
cd <your location>
git clone https://code.google.com/p/keyczar/
cd <your location>/keyczar/java/code/
git checkout Java_release_0.71g
mvn clean install
cd target

Signing public and private keys with Keyczar:

Asymmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/asymmetric --name="Open Infinity" --purpose=crypt --asymmetric=rsa
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/asymmetric --status=primary
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar pubkey --location=<your location>/security/asymmetric --destination=<your location>/security/pubkey

Symmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/symmetric --name="Open Infinity" --purpose=crypt
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/symmetric --name="Open Infinity" --status=primary

Install Lombok:
mkdir <lombok-directory>
cd <lombok-directory>
git clone https://github.com/awhitford/lombok.maven
cd lombok.maven
Use maven for compiling, testing, packaging lombok -plugin to local Maven repository with command:
mvn clean install

Install Open Infinity Core:
mkdir <open-infinity-core>
git clone https://github.com/open-infinity/core
cd core
vi src/test/resources/properties/crypto.properties (define paths to your local file system for asymmetric and symmetric keys)
Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install

____________________________________________________________________________________________________________________________________________________________

v.1.5.1.RELEASE - Bug fixes with the following content

Upgrades to Maven dependencies

- commons-io version upgrade to 1.4

Packaging instructions

Maven installation:
Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.6 is needed):
http://maven.apache.org/download.html

Installing gryptography extensions:
mkdir <your location>
cd <your location>
git clone https://code.google.com/p/keyczar/
cd <your location>/keyczar/java/code/
git checkout Java_release_0.71g
mvn clean install
cd target

Signing public and private keys with Keyczar:

Asymmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/asymmetric --name="Open Infinity" --purpose=crypt --asymmetric=rsa
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/asymmetric --status=primary
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar pubkey --location=<your location>/security/asymmetric --destination=<your location>/security/pubkey

Symmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/symmetric --name="Open Infinity" --purpose=crypt
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/symmetric --name="Open Infinity" --status=primary

Install Lombok:
mkdir <lombok-directory>
cd <lombok-directory>
git clone https://github.com/awhitford/lombok.maven
cd lombok.maven
Use maven for compiling, testing, packaging lombok -plugin to local Maven repository with command:
mvn clean install

Install Open Infinity Core:
mkdir <open-infinity-core>
git clone https://github.com/ileinone/open-infinity
cd <open-infinity-core>/releases/openinfinity-core/1.4.0
vi src/test/resources/properties/crypto.properties (define paths to your local file system for asymmetric and symmetric keys)
Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install

v.1.5.0.RELEASE - New features with the following content

+ Identity object has now ability to add user based attributes like phone number, 

Packaging instructions

Maven installation:
Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.6 is needed):
http://maven.apache.org/download.html

Installing gryptography extensions:
mkdir <your location>
cd <your location>
git clone https://code.google.com/p/keyczar/
cd <your location>/keyczar/java/code/
git checkout Java_release_0.71g
mvn clean install
cd target

Signing public and private keys with Keyczar:

Asymmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/asymmetric --name="Open Infinity" --purpose=crypt --asymmetric=rsa
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/asymmetric --status=primary
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar pubkey --location=<your location>/security/asymmetric --destination=<your location>/security/pubkey

Symmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/symmetric --name="Open Infinity" --purpose=crypt
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/symmetric --name="Open Infinity" --status=primary

Install Lombok:
mkdir <lombok-directory>
cd <lombok-directory>
git clone https://github.com/awhitford/lombok.maven
cd lombok.maven
Use maven for compiling, testing, packaging lombok -plugin to local Maven repository with command:
mvn clean install

Install Open Infinity Core:
mkdir <open-infinity-core>
git clone https://github.com/ileinone/open-infinity
cd <open-infinity-core>/releases/openinfinity-core/1.4.0
vi src/test/resources/properties/crypto.properties (define paths to your local file system for asymmetric and symmetric keys)
Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install

v.1.4.0.RELEASE - New features with the following content

+ BaseEntity support with lifecycle information support for standardized data models.
+ MultiTenantBaseEntity for shared schema context in SaaS solutions.
+ MultiTenantAspect support for injecting tenant id to domain entities.

Upgrades to Maven dependencies:

- jUnit support level upgraded to 4.11

Packaging instructions

Maven installation:
Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.6 is needed):
http://maven.apache.org/download.html

Installing gryptography extensions:
mkdir <your location>
cd <your location>
git clone https://code.google.com/p/keyczar/
cd <your location>/keyczar/java/code/
git checkout Java_release_0.71g
mvn clean install
cd target

Signing public and private keys with Keyczar:

Asymmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/asymmetric --name="Open Infinity" --purpose=crypt --asymmetric=rsa
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/asymmetric --status=primary
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar pubkey --location=<your location>/security/asymmetric --destination=<your location>/security/pubkey

Symmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/symmetric --name="Open Infinity" --purpose=crypt
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/symmetric --name="Open Infinity" --status=primary

Install Lombok:
mkdir <lombok-directory>
cd <lombok-directory>
git clone https://github.com/awhitford/lombok.maven
cd lombok.maven
Use maven for compiling, testing, packaging lombok -plugin to local Maven repository with command:
mvn clean install

Install Open Infinity Core:
mkdir <open-infinity-core>
git clone https://github.com/ileinone/open-infinity
cd <open-infinity-core>/releases/openinfinity-core/1.4.0
vi src/test/resources/properties/crypto.properties (define paths to your local file system for asymmetric and symmetric keys)
Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install

v.1.3.1.RELEASE - Bug fixes with following content

+ CryptoSupport support for symmetric and asymmetric security algorithms.

Upgrades to Maven dependencies

- ehcache version upgrade to 2.7.1

Packaging instructions

Maven installation:
Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.6 is needed):
http://maven.apache.org/download.html

Installing gryptography extensions:
mkdir <your location>
cd <your location>
git clone https://code.google.com/p/keyczar/
cd <your location>/keyczar/java/code/
git checkout Java_release_0.71g
mvn clean install
cd target

Signing public and private keys with Keyczar:

Asymmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/asymmetric --name="Open Infinity" --purpose=crypt --asymmetric=rsa
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/asymmetric --status=primary
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar pubkey --location=<your location>/security/asymmetric --destination=<your location>/security/pubkey

Symmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/symmetric --name="Open Infinity" --purpose=crypt
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/symmetric --name="Open Infinity" --status=primary

Install Lombok:
mkdir <lombok-directory>
cd <lombok-directory>
git clone https://github.com/awhitford/lombok.maven
cd lombok.maven
Use maven for compiling, testing, packaging lombok -plugin to local Maven repository with command:
mvn clean install

Install Open Infinity Core:
mkdir <open-infinity-core>
git clone https://github.com/ileinone/open-infinity
cd <open-infinity-core>/releases/openinfinity-core/1.3.0
vi src/test/resources/properties/crypto.properties (define paths to your local file system for asymmetric and symmetric keys)
Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install

v.1.3.0.RELEASE - Upgrades to Maven Dependencies

+ Keyczar 0.71g library added to support cryptography features
+ Apache Codec 1.8 library added to support Base 64 en/decoding

Features 

- Cryptography aspect (encrypts and decrypts entity attributes defined by annotations)

Packaging instructions

Maven installation:
Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.6 is needed):
http://maven.apache.org/download.html

Installing gryptography extensions:
mkdir <your location>
cd <your location>
git clone https://code.google.com/p/keyczar/
cd <your location>/keyczar/java/code/
git tag Java_release_0.71g
mvn clean install
cd target

Signing public and private keys with Keyczar:

Asymmetric cryptography extension
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar create --location=<your location>/security/asymmetric --name="Open Infinity" --purpose=crypt --asymmetric=rsa
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar addkey --location=<your location>/security/asymmetric --status=primary
java -jar KeyczarTool-0.71g-<mmDDyyyy>.jar pubkey --location=<your location>/security/asymmetric --destination=<your location>/security/pubkey

Install Lombok:
mkdir <lombok-directory>
cd <lombok-directory>
git clone https://github.com/awhitford/lombok.maven
cd lombok.maven
Use maven for compiling, testing, packaging lombok -plugin to local Maven repository with command:
mvn clean install

Install Open Infinity Core:
mkdir <open-infinity-core>
git clone https://github.com/ileinone/open-infinity
cd <open-infinity-core>/releases/openinfinity-core/1.3.0
vi src/test/resources/properties/crypto.properties (define paths to your local file system for public and private keys)
Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install

v.1.2.0.RELEASE - Upgrades to Maven dependencies

+ HDIV Web Security library support level to 2.1.4
+ Spring Batch Core support level to 2.2.0.RELEASE
+ Spring Aspects support level to 3.1.4.RELEASE
+ Spring JMS support level to 3.1.4.RELEASE
- Spring Framework support level upgraded to 3.1.4.RELEASE
- Spring Security support level upgraded to 3.1.4.RELEASE
- SLF4J support level upgraded to 1.7.5
- JBehave support level upgraded to 3.8
- JBehave Web support level upgraded to 3.5.5
- Junit support level upgraded to 4.8.2
- Mockito support level upgraded to 1.9.5
- Hsqldb support level upgraded to 2.2.9
- Jackson support level upgraded to 1.9.12
- Hibernate validator support level upgraded to 4.2.0.Final
- Validation API version support level upgraded to 1.1.0.Final
- Joda time support level upgraded to 2.2
- Lombok support level upgraded to 0.11.8
- Jolokia support level upgraded to 1.1.1
- EHCache support level upgraded to 2.6.6
- Commons-lang support level upgraded to 2.6

Features

+ Collection element util for managing callbacks with Collections and Maps.

Packaging instructions.

Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.6 is needed):
http://maven.apache.org/download.html

Install lombok
mkdir <lombok-directory>
cd <lombok-directory>
git clone https://github.com/awhitford/lombok.maven
cd lombok.maven
Use maven for compiling, testing, packaging lombok -plugin to local Maven repository with command:
mvn clean install

Install Open Infinity Core:
mkdir <open-infinity-core>
git clone https://github.com/ileinone/open-infinity
cd <open-infinity-core>/releases/openinfinity-core/1.1.1
Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install

v.1.1.0.RELEASE - Upgrades to Maven dependencies
- Spring Framework support level upgraded to 3.1.1
- Spring Security support level upgraded to 3.1.0
- JBehave support level upgraded to 3.6.2
- JBehave Web support level upgraded to 3.5.2

Features
- AuditTrailAspect upgrade to version 1.1.0 (Spring Security upgrade)
- LogAspect upgrade to version 1.1.0 (implements argument strategy based on audit trail)
- Log annotation upgrade to version 1.1.0 (implements argument strategy based on audit trail)

Packaging instructions.

Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.6 is needed):
http://maven.apache.org/download.html

Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install

v.1.0.1.RELEASE - Upgrades to Maven dependencies

Dependencies for the following components has been upgraded:
- Spring Framework support level upgraded to 3.0.7 
- Jackson core and mapper support level upgraded to 1.9.5 license upgraded to ASL 
- Lombok Project support level upgraded to 0.10.8
- SLF4J support level upgraded to 1.6.4
- Junit support level upgraded to 4.8.2
- Mockito support level upgraded to 1.9.0
- JBehave support level upgraded to 3.5.4
- JBehave Web support level upgraded to 3.4.3

Packaging instructions.

Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.6 is needed):
http://maven.apache.org/download.html

Use maven for compiling, testing, packaging and installing Open Infinity Core -component to local Maven repository with command:
mvn clean lombok:delombok install

v.1.0.0-RELEASE - Initial version

Features using aspect oriented programming:
- Audit trail aspect (prints audit trail information to log4j based configuration)
- Logging aspect (logs will be written to a log4j based configuration)
- Exception translator (prevents unknown exceptions raising within the system)
- XSS validator (simple validator for preventing xss attacks)
- Three tier exception hierarchy deriving from the core abstract exception (application exception, system exception, business violation exception)
- JDBC property placeholder for fetching configuration parameters from a shared database.

Packaging instructions.

Download configuration management tool (Maven 3) and install it (notice that Java Runtime 1.6 is needed):
http://maven.apache.org/download.html

Use maven for compiling, testing and packaging Open Infinity Core -component with command:
mvn clean lombok:delombok compile test package
